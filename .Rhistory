library(tidyverse)
library(e1071)
#Loading in the data sets
FYConsolidatedData = read.csv("h233.csv")
LongitudeData3Y = read.csv("h226.csv")
OfficeBasedVisits = read.csv("h229g.csv")
JobFile = read.csv("h227.csv")
load("NSDUH_2021.RData")
#Trimming FYConsolidatedData for usability
keeps <- c("DUPERSID","AGE21X", "SEX", "RACEV1X", "EDUCYR", "POVCAT21", "TTLP21X", "INSCOV21", "REGION21", "MNHLTH53","PERWT21F")
FYConsolidatedDataClean <- subset(FYConsolidatedData, select = keeps)
FYConsolidatedDataClean
#Replacing numeric values with qualitative details FYConsolidatedDataClean
#Race
FYConsolidatedDataClean$RACEV1X[FYConsolidatedDataClean$RACEV1X == 1] <- 'White'
FYConsolidatedDataClean$RACEV1X[FYConsolidatedDataClean$RACEV1X == 2] <- 'Black'
FYConsolidatedDataClean$RACEV1X[FYConsolidatedDataClean$RACEV1X == 3] <- 'Amer Indian/Alaska Native'
FYConsolidatedDataClean$RACEV1X[FYConsolidatedDataClean$RACEV1X == 4] <- 'Asian/Natv Hawaiian/Pacfc Isl'
FYConsolidatedDataClean$RACEV1X[FYConsolidatedDataClean$RACEV1X == 6] <- 'Multiple Races Reported'
#Sex
FYConsolidatedDataClean$SEX[FYConsolidatedDataClean$SEX == 1] <- 'Male'
FYConsolidatedDataClean$SEX[FYConsolidatedDataClean$SEX == 2] <- 'Female'
#Categorical Poverty
FYConsolidatedDataClean$POVCAT21[FYConsolidatedDataClean$POVCAT21 == 1] <- 'Poor/Negative'
FYConsolidatedDataClean$POVCAT21[FYConsolidatedDataClean$POVCAT21 == 2] <- 'Near Poor'
FYConsolidatedDataClean$POVCAT21[FYConsolidatedDataClean$POVCAT21 == 3] <- 'Low Income'
FYConsolidatedDataClean$POVCAT21[FYConsolidatedDataClean$POVCAT21 == 4] <- 'Middle Income'
FYConsolidatedDataClean$POVCAT21[FYConsolidatedDataClean$POVCAT21 == 5] <- 'High Income'
#Education when first entering MEPS
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 0] <- 'No School/Kindergarten'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR %in% 1:8] <- 'Elementary Grades'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR %in% 9:11] <- 'HighSchool Grades 9-11'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 12] <- 'Grade 12'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 13] <- '1 Year College'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 14] <- '2 Years College'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 15] <- '3 Years College'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 16] <- '4 Years College'
FYConsolidatedDataClean$EDUCYR[FYConsolidatedDataClean$EDUCYR == 17] <- '5+ Years College'
#Insurance Coverage
FYConsolidatedDataClean$INSCOV21[FYConsolidatedDataClean$INSCOV21 == 1] <- 'Any Private'
FYConsolidatedDataClean$INSCOV21[FYConsolidatedDataClean$INSCOV21 == 2] <- 'Public Only'
FYConsolidatedDataClean$INSCOV21[FYConsolidatedDataClean$INSCOV21 == 3] <- 'Uninsured'
#Census Location (As of 12/31/21)
FYConsolidatedDataClean$REGION21[FYConsolidatedDataClean$REGION21 == 1] <- 'NorthEast'
FYConsolidatedDataClean$REGION21[FYConsolidatedDataClean$REGION21 == 2] <- 'MidWest'
FYConsolidatedDataClean$REGION21[FYConsolidatedDataClean$REGION21 == 3] <- 'South'
FYConsolidatedDataClean$REGION21[FYConsolidatedDataClean$REGION21 == 4] <- 'West'
#Percieved Mental Health Status (As of Round 5/3) (Commenting these out for visual's sake)
#FYConsolidatedDataClean$MNHLTH53[FYConsolidatedDataClean$MNHLTH53 == 1] <- 'Excellent'
#FYConsolidatedDataClean$MNHLTH53[FYConsolidatedDataClean$MNHLTH53 == 2] <- 'Very Good'
#FYConsolidatedDataClean$MNHLTH53[FYConsolidatedDataClean$MNHLTH53 == 3] <- 'Good'
#FYConsolidatedDataClean$MNHLTH53[FYConsolidatedDataClean$MNHLTH53 == 4] <- 'Fair'
#FYConsolidatedDataClean$MNHLTH53[FYConsolidatedDataClean$MNHLTH53 == 5] <- 'Poor'
FYConsolidatedDataClean
#Trimming JobFile
keeps2 <- c("DUPERSID", "INDCODEX", "OCCCODEX", "EMPLINS")
JobFileJoining <- subset(JobFile, select = keeps2)
JobFileJoining
#Joining FYConsolidatedDataClean and JobFileJoining
FYJobInner <- merge(FYConsolidatedDataClean, JobFileJoining, by = "DUPERSID")
FYJobInner
FYJobLeft <- merge(FYConsolidatedDataClean, JobFileJoining, by = "DUPERSID", all.x = TRUE)
FYJobLeft
#Trimming OfficeBasedVisits
keeps3 <- c("DUPERSID", "MEDPTYPE_M18", "VSTCTGRY", "DOCATLOC", "MEDPRESC")
OfficeBasedVisitsClean <- subset(OfficeBasedVisits, select = keeps3)
OfficeBasedVisitsClean
#Replacing numeric values with qualitative details OfficeBasedVisitsClean
#Type of Med Person Patient Talked to on Visit (Only labeling the mental health ones. If someone can double check to make sure I didn't miss one that would be great)
OfficeBasedVisitsClean$MEDPTYPE_M18[OfficeBasedVisitsClean$MEDPTYPE_M18 == 6] <- 'Mental Health Cnslr/Marital or Fam Therapist'
OfficeBasedVisitsClean$MEDPTYPE_M18[OfficeBasedVisitsClean$MEDPTYPE_M18 == 13] <- 'Psychologist'
OfficeBasedVisitsClean$MEDPTYPE_M18[OfficeBasedVisitsClean$MEDPTYPE_M18 == 14] <- 'Social Worker'
#Visit Category (Only labeling the Mental health one)
OfficeBasedVisitsClean$VSTCTGRY[OfficeBasedVisitsClean$VSTCTGRY == 4] <- 'Psychotherapy/Mental Health Counsiling'
#Was there a MD at location where Patient saw the Provider?
OfficeBasedVisitsClean$DOCATLOC[OfficeBasedVisitsClean$DOCATLOC == 1] <- 'Yes'
OfficeBasedVisitsClean$DOCATLOC[OfficeBasedVisitsClean$DOCATLOC == 2] <- 'No'
#Medication Perscribed to Patient
OfficeBasedVisitsClean$MEDPRESC[OfficeBasedVisitsClean$MEDPRESC == 1] <- 'Yes'
OfficeBasedVisitsClean$MEDPRESC[OfficeBasedVisitsClean$MEDPRESC == 2] <- 'No'
OfficeBasedVisitsClean
#Joining FYConsolidatedDataClean and OfficeBasedVisitsClean
FYOfficeInner <- merge(FYConsolidatedDataClean, OfficeBasedVisitsClean, by = "DUPERSID")
FYOfficeInner
FYOfficeLeft <- merge(FYConsolidatedDataClean, OfficeBasedVisitsClean, by = "DUPERSID", all.x = TRUE)
FYOfficeLeft
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25), aes(x = AGE21X)) +
geom_histogram(binwidth = 1, fill = "red", color = "white") +
labs(title = "Range of Young Men Aged 18-25", x = "AGE", y = "Amount")
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & EDUCYR > 0), aes(x = EDUCYR, fill = POVCAT21)) +
geom_bar(position = "fill", color = "red") +
labs(title = "Education vs Poverty Status Ages 18-25", x = "Level of Education", y = "Poverty Status") +
scale_fill_manual(values = c("lightgreen", "orange", "yellow", "green", "blue")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mean_mental_health_status <- FYConsolidatedDataClean %>%
group_by(AGE21X) %>%
summarise(
mean_status = mean(MNHLTH53, na.rm = TRUE),
median_status = median(MNHLTH53, na.rm = TRUE),
sd_status = sd(MNHLTH53, na.rm = TRUE)
)
mean_mental_health_status_na <- mean_mental_health_status %>%
filter(AGE21X != -1)
print(mean_mental_health_status_na)
FYConsolidatedDataClean$AGE_GROUP <- cut(FYConsolidatedDataClean$AGE21X,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80", "81-90"),
right = FALSE)
mean_mental_health_agegroup <- FYConsolidatedDataClean %>%
filter(!is.na(MNHLTH53) & !is.na(AGE_GROUP)) %>%
group_by(AGE_GROUP) %>%
summarise(mean_status = mean(MNHLTH53, na.rm = TRUE))
head(mean_mental_health_agegroup)
ggplot(mean_mental_health_agegroup, aes(x = AGE_GROUP, y = mean_status)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "green", alpha = 0.7) +
labs(title = "Mean Mental Health Status by Age Group", x = "Age", y = "Mental Health Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
numeric_variables <- FYConsolidatedDataClean %>%
select(where(is.numeric))
correlation_matrix <- cor(numeric_variables, use = "complete.obs")
print(correlation_matrix)
install.packages("corrplot")
library(corrplot)
corrplot(correlation_matrix, method = "circle",
addCoef.col = "black")
cat_table <- FYConsolidatedDataClean %>%
filter(!is.na(POVCAT21)) %>%
count(POVCAT21) %>%
mutate(percentage = n / sum(n) * 100)
cat_table
con_table <- FYConsolidatedDataClean %>%
filter(!is.na(MNHLTH53)) %>%
summarise(
Skewness_MNHLTH53 = skewness(MNHLTH53, na.rm = TRUE),
Kurtosis_MNHLTH53 = kurtosis(MNHLTH53, na.rm = TRUE),
Sd_MNHLTH53 = sd(MNHLTH53, na.rm = TRUE),
Median_MNHLTH53 = median(MNHLTH53, na.rm = TRUE),
Mean_MNHLTH53 = mean(MNHLTH53, na.rm = TRUE),
Min_MNHLTH53 = min(MNHLTH53, na.rm = TRUE),
Max_MNHLTH53 = max(MNHLTH53, na.rm = TRUE),
)
con_table
#Making a varaible that counts the ammount of recorded visits to Psychotherapy/Mental Health Counsiling by individual ID
Counciling <- FYOfficeLeft %>% filter(VSTCTGRY == 'Psychotherapy/Mental Health Counsiling')
CouncilingCount <- count(Counciling$DUPERSID)
#Made a jitter plot to try and visualize frequency of visits to mental health status. Too little variables within the 18-25 range and skewed towards the lower end made the graph not turn out well.
ggplot(FYCouncilingLeft %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53, y = MentalHealthAppointments)) +
geom_jitter(position = "jitter") +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYCouncilingLeft %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Therapy Attending Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYCouncilingLeft %>% filter(MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Therapy Attending Individuals Mental Health Status", x = "Mental Health Status", y = "Amount")
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingLeft))
FYCouncilingGLM <- glm(MNHLTH53 ~ .,
data = FYCouncilingLeft, subset = train)
#LDA on FYCounciling
require(MASS)
FYCouncilingLDA <- lda(MNHLTH53 ~ . - EDUCYR,
data = FYCouncilingLeft, subset = train)
#Using LDA as a Predictor
FYCouncilingLDAPredict <- predict(FYCouncilingLDA, FYCouncilingTest)
#Making a varaible that counts the ammount of recorded visits to Psychotherapy/Mental Health Counsiling by individual ID
Counciling <- FYOfficeLeft %>% filter(VSTCTGRY == 'Psychotherapy/Mental Health Counsiling')
CouncilingCount <- count(Counciling$DUPERSID)
#Making a varaible that counts the ammount of recorded visits to Psychotherapy/Mental Health Counciling by individual ID
Counciling <- FYOfficeLeft %>% filter(VSTCTGRY == 'Psychotherapy/Mental Health Counsiling')
CouncilingCount <- count(Counciling$DUPERSID)
#Made a jitter plot to try and visualize frequency of visits to mental health status. Too little variables within the 18-25 range and skewed towards the lower end made the graph not turn out well.
ggplot(FYCouncilingLeft %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53, y = MentalHealthAppointments)) +
geom_jitter(position = "jitter") +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
#Making a varaible that counts the ammount of recorded visits to Psychotherapy/Mental Health Counciling by individual ID
Counciling <- FYOfficeLeft %>% filter(VSTCTGRY == 'Psychotherapy/Mental Health Counsiling')
CouncilingCount <- count(Counciling$DUPERSID)
#Making a varaible that counts the ammount of recorded visits to Psychotherapy/Mental Health Counciling by individual ID
Counciling <- FYOfficeLeft %>% filter(VSTCTGRY == 'Psychotherapy/Mental Health Counsiling')
CouncilingCount <- plyr::count(Counciling$DUPERSID)
colnames(CouncilingCount) <- c("DUPERSID", "MentalHealthAppointments")
FYCouncilingLeft <- merge(FYConsolidatedDataClean, CouncilingCount, by = "DUPERSID", all.x = TRUE)
FYCouncilingLeft$MentalHealthAppointments[is.na(FYCouncilingLeft$MentalHealthAppointments)] <- 0
#Made a small table for the count of recorded Visits
VisitTable <- plyr::count(FYCouncilingLeft$MentalHealthAppointments)
colnames(VisitTable) <- c("MentalHealthAppointments", "Frequency")
VisitTable
#Made a jitter plot to try and visualize frequency of visits to mental health status. Too little variables within the 18-25 range and skewed towards the lower end made the graph not turn out well.
ggplot(FYCouncilingLeft %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53, y = MentalHealthAppointments)) +
geom_jitter(position = "jitter") +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYCouncilingLeft %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Therapy Attending Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYCouncilingLeft %>% filter(MNHLTH53 > 0 & MentalHealthAppointments > 0), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Therapy Attending Individuals Mental Health Status", x = "Mental Health Status", y = "Amount")
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingLeft))
set.seed(69420)
train <- sample(seq_len(nrow(FYCouncilingLeft)), size = FYCouncilingSize)
FYCouncilingTrain <- FYCouncilingLeft[sorter, ]
FYCouncilingGLM <- glm(MNHLTH53 ~ .,
data = FYCouncilingLeft, subset = train)
summary(FYCouncilingGLM)
#LDA on FYCounciling
require(MASS)
FYCouncilingLDA <- lda(MNHLTH53 ~ . - EDUCYR,
data = FYCouncilingLeft, subset = train)
FYCouncilingLDA
#Using LDA as a Predictor
FYCouncilingLDAPredict <- predict(FYCouncilingLDA, FYCouncilingTest)
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingLeft))
set.seed(69420)
train <- sample(seq_len(nrow(FYCouncilingLeft)), size = FYCouncilingSize)
FYCouncilingTrain <- FYCouncilingLeft[sorter, ]
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingLeft))
set.seed(69420)
train <- sample(seq_len(nrow(FYCouncilingLeft)), size = FYCouncilingSize)
FYCouncilingTrain <- FYCouncilingLeft[train, ]
FYCouncilingTest <- FYCouncilingLeft[-train, ]
FYCouncilingTestMental <- FYCouncilingLeft$MNHLTH53[-train]
FYCouncilingGLM <- glm(MNHLTH53 ~ .,
data = FYCouncilingLeft, subset = train)
summary(FYCouncilingGLM)
#LDA on FYCounciling
require(MASS)
FYCouncilingLDA <- lda(MNHLTH53 ~ . - EDUCYR,
data = FYCouncilingLeft, subset = train)
FYCouncilingLDA
#Using LDA as a Predictor
FYCouncilingLDAPredict <- predict(FYCouncilingLDA, FYCouncilingTest)
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingLeft))
set.seed(69420)
train <- sample(seq_len(nrow(FYCouncilingLeft)), size = FYCouncilingSize)
FYCouncilingTrain <- FYCouncilingLeft[train, ]
FYCouncilingTest <- FYCouncilingLeft[-train, ]
FYCouncilingTestMental <- FYCouncilingLeft$MNHLTH53[-train]
FYCouncilingGLM <- glm(MNHLTH53 ~ .,
data = FYCouncilingLeft, subset = train)
summary(FYCouncilingGLM)
#LDA on FYCounciling
require(MASS)
FYCouncilingLDA <- lda(MNHLTH53 ~ . - EDUCYR,
data = FYCouncilingLeft, subset = train)
FYCouncilingLDA
#Using LDA as a Predictor
FYCouncilingLDAPredict <- predict(FYCouncilingLDA, FYCouncilingTest)
FYCouncilingNA <- FYCouncilingLeft %>%
filter(
!is.na(EDUCYR),
!is.na(MNHLTH53),
!SEX %in% c(-1),
!REGION21 %in% c(-1),
!POVCAT21 %in% c(-1),
!INSCOV21 %in% c(-1)
)
#Splitting Training and Test Sets. (Specifically Counseling Join)
FYCouncilingSize <- floor(.75*nrow(FYCouncilingNA))
set.seed(69420)
train <- sample(seq_len(nrow(FYCouncilingNA)), size = FYCouncilingSize)
FYCouncilingTrain <- FYCouncilingNA[train, ]
FYCouncilingTest <- FYCouncilingNA[-train, ]
FYCouncilingTestMental <- FYCouncilingNA$MNHLTH53[-train]
FYCouncilingGLM <- glm(MNHLTH53 ~ .,
data = FYCouncilingNA, subset = train)
summary(FYCouncilingGLM)
#LDA on FYCounciling
require(MASS)
FYCouncilingLDA <- lda(MNHLTH53 ~ . - EDUCYR,
data = FYCouncilingNA, subset = train)
FYCouncilingLDA
#Using LDA as a Predictor
FYCouncilingLDAPredict <- predict(FYCouncilingLDA, FYCouncilingTest)
#names(FYCouncilingLDAPredict)
table(FYCouncilingLDAPredict$class, FYCouncilingTestMental)
#Now that the LDA is set up, we should really think about what to do with the missing data
#
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25), aes(x = AGE21X)) +
geom_histogram(binwidth = 1, fill = "red", color = "white") +
labs(title = "Range of Young Men Aged 18-25", x = "AGE", y = "Amount")
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
#Young Men (18-25) Mental Health Status bar chart.
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25), aes(x = MNHLTH53)) +
geom_bar(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Young Men (18-25) Mental Health Status", x = "Mental Health Status", y = "Amount")
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & EDUCYR > 0), aes(x = EDUCYR, fill = POVCAT21)) +
geom_bar(position = "fill", color = "red") +
labs(title = "Education vs Poverty Status Ages 18-25", x = "Level of Education", y = "Poverty Status") +
scale_fill_manual(values = c("lightgreen", "orange", "yellow", "green", "blue")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Education vs Poverty Status Ages 18-25 visual.
ggplot(FYConsolidatedDataClean %>% filter(SEX == 'Male' & AGE21X >= 18 & AGE21X <= 25 & EDUCYR > 0), aes(x = EDUCYR, fill = POVCAT21)) +
geom_bar(position = "fill", color = "red") +
labs(title = "Education vs Poverty Status Ages 18-25", x = "Level of Education", y = "Poverty Status") +
scale_fill_manual(values = c("lightgreen", "orange", "yellow", "green", "blue")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mean_mental_health_status <- FYConsolidatedDataClean %>%
group_by(AGE21X) %>%
summarise(
mean_status = mean(MNHLTH53, na.rm = TRUE),
median_status = median(MNHLTH53, na.rm = TRUE),
sd_status = sd(MNHLTH53, na.rm = TRUE)
)
mean_mental_health_status_na <- mean_mental_health_status %>%
filter(AGE21X != -1)
print(mean_mental_health_status_na)
#Average mean, median, and SD of mental health status by age.
mean_mental_health_status <- FYConsolidatedDataClean %>%
group_by(AGE21X) %>%
summarise(
mean_status = mean(MNHLTH53, na.rm = TRUE),
median_status = median(MNHLTH53, na.rm = TRUE),
sd_status = sd(MNHLTH53, na.rm = TRUE)
)
mean_mental_health_status_na <- mean_mental_health_status %>%
filter(AGE21X != -1)
print(mean_mental_health_status_na)
#Creating age brackets.
FYConsolidatedDataClean$AGE_GROUP <- cut(FYConsolidatedDataClean$AGE21X,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80", "81-90"),
right = FALSE)
mean_mental_health_agegroup <- FYConsolidatedDataClean %>%
filter(!is.na(MNHLTH53) & !is.na(AGE_GROUP)) %>%
group_by(AGE_GROUP) %>%
summarise(mean_status = mean(MNHLTH53, na.rm = TRUE))
head(mean_mental_health_agegroup)
#Mean mental health status by age group.
mean_mental_health_agegroup <- FYConsolidatedDataClean %>%
filter(!is.na(MNHLTH53) & !is.na(AGE_GROUP)) %>%
group_by(AGE_GROUP) %>%
summarise(mean_status = mean(MNHLTH53, na.rm = TRUE))
head(mean_mental_health_agegroup)
#Mean Mental Health Status by Age Group bar chart.
ggplot(mean_mental_health_agegroup, aes(x = AGE_GROUP, y = mean_status)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "green", alpha = 0.7) +
labs(title = "Mean Mental Health Status by Age Group", x = "Age", y = "Mental Health Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Correlation matrix.
numeric_variables <- FYConsolidatedDataClean %>%
select(where(is.numeric))
#Correlation matrix.
numeric_variables <- FYConsolidatedDataClean %>%
select(where(is.numeric))
